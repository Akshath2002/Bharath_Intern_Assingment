import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your dataset (assuming you have a CSV file)
data = pd.read_csv('house_data.csv')

# Assuming 'X' contains the features and 'y' contains the target (house prices)
X = data[['feature1', 'feature2', 'feature3']]  # Add your features here
y = data['house_price']  # Replace with your target column

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# You can now use the trained model to make predictions on new data
new_data = pd.DataFrame({'feature1': [value1], 'feature2': [value2], 'feature3': [value3]})
predicted_price = model.predict(new_data)
print(f"Predicted Price: {predicted_price[0]}")
